<?xml version="1.0" encoding="utf-8"?>
<tool:BaseTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:tool="tool.*"
		 title="压缩/解压缩"
		 initialize="titlewindow1_initializeHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.DragManager;

			protected function titlewindow1_initializeHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
			}

			protected function compress_nativeDragEnterHandler(event:NativeDragEvent):void
			{
				// TODO Auto-generated method stub
				
				DragManager.showFeedback(DragManager.LINK);
				DragManager.acceptDragDrop(compressGroup);
				
				//trace("拖入压缩");
			}


			protected function uncompress_nativeDragEnterHandler(event:NativeDragEvent):void
			{
				// TODO Auto-generated method stub
				
				DragManager.showFeedback(DragManager.LINK);
				DragManager.acceptDragDrop(uncompressGroup);
				
				//trace("拖入解压缩");
			}
			
			
			protected function compress_nativeDragDropHandler(event:NativeDragEvent):void
			{
				// TODO Auto-generated method stub
				//trace("压缩");
				
				var list:Array = event.clipboard.getData(ClipboardFormats.FILE_LIST_FORMAT) as Array;
				
				for each(var file:File in list)
				{
					var bytes:ByteArray = new ByteArray();
					
					var fs:FileStream = new FileStream();
					
					fs.open(file, FileMode.READ);
					fs.readBytes(bytes);
					fs.close();
					
					try
					{
						bytes.compress(CompressionAlgorithm.ZLIB);
					}
					catch(e:Error)
					{
						continue;
					}
					
					var f:File = file.parent.resolvePath("Compress_" + file.name);
					fs = new FileStream();
					fs.open(f, FileMode.WRITE);
					fs.writeBytes(bytes);
					fs.close();
				}
			}


			protected function uncompress_nativeDragDropHandler(event:NativeDragEvent):void
			{
				// TODO Auto-generated method stub
				//trace("解压缩");
				
				var list:Array = event.clipboard.getData(ClipboardFormats.FILE_LIST_FORMAT) as Array;
				
				for each(var file:File in list)
				{
					var bytes:ByteArray = new ByteArray();
					
					var fs:FileStream = new FileStream();
					
					fs.open(file, FileMode.READ);
					fs.readBytes(bytes);
					fs.close();
					
					try
					{
						bytes.uncompress(CompressionAlgorithm.ZLIB);
					}
					catch(e:Error)
					{
						continue;
					}
					
					var f:File = file.parent.resolvePath("Uncompress_" + file.name);
					fs = new FileStream();
					fs.open(f, FileMode.WRITE);
					fs.writeBytes(bytes);
					fs.close();
				}
				
				ToolGlobal.windows.statusText.text = "解压完成，输出到文件所在目录！";
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:HGroup left="10" top="10" right="10" bottom="10" gap="1" chromeColor="#E7E7E7">
		<s:Group id="compressGroup" width="50%" height="100%" mouseChildren="false" nativeDragEnter="compress_nativeDragEnterHandler(event)" nativeDragDrop="compress_nativeDragDropHandler(event)">
			<s:Label text="拖入文件进行ZLib压缩"  verticalAlign="middle" textAlign="center" top="0" bottom="0" left="0" right="0"/>
		</s:Group>
		<mx:VRule height="100%" width="1"/>
		<s:Group id="uncompressGroup" width="50%" height="100%" mouseChildren="false" nativeDragEnter="uncompress_nativeDragEnterHandler(event)" nativeDragDrop="uncompress_nativeDragDropHandler(event)">
			<s:Label text="拖入文件进行ZLib解压缩"  top="0" bottom="0" left="0" right="0" verticalAlign="middle" textAlign="center"/>
		</s:Group>
	</s:HGroup>
</tool:BaseTitleWindow>
