<?xml version="1.0" encoding="utf-8"?>
<tool:BaseTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx" 
					  xmlns:tool="tool.*" 
					  title="添加动作" 
					  width="246" height="325"
					  initialize="__initializedHandler(event)">
	<fx:Script>
		<![CDATA[
			import jsion.Global;
			import jsion.utils.DisposeUtil;
			
			import mx.events.FlexEvent;
			
			import tool.pngpacker.datas.ActionData;
			import tool.pngpacker.datas.DirData;
			import tool.pngpacker.events.PackerEvent;
			
			public var PackerWin:PNGPackerWindow;
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
				var list:Array = getSelectedAction();
				
				dispatch(new PackerEvent(PackerEvent.CREATE_ACTION, list));
				
				close();
			}
			
			protected function button2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				close();
			}
			
			protected function getSelectedAction():Array
			{
				var list:Array = [];
				
				if(NormalCB.selected) list.push(new ActionData(Global.NormalMotion));
				if(WalkCB.selected) list.push(new ActionData(Global.WalkMotion));
				if(RunCB.selected) list.push(new ActionData(Global.RunMotion));
				if(AttackCB.selected) list.push(new ActionData(Global.AttackMotion));
				if(DefenseCB.selected) list.push(new ActionData(Global.DefenseMotion));
				if(HurtCB.selected) list.push(new ActionData(Global.HurtMotion));
				if(SkillCB.selected) list.push(new ActionData(Global.SkillMotion));
				if(DieCB.selected) list.push(new ActionData(Global.DieMotion));
				
				for each(var a:ActionData in list)
				{
					addDirToAction(a);
				}
				
				return list;
			}
			
			protected function addDirToAction(action:ActionData):void
			{
				if(action == null) return;
				
				if(UpCB.selected) action.addDir(new DirData(Global.UpWard));
				if(DownCB.selected) action.addDir(new DirData(Global.DownWard));
				if(LeftCB.selected) action.addDir(new DirData(Global.LeftWard));
				if(RightCB.selected) action.addDir(new DirData(Global.RightWard));
				if(LeftTopCB.selected) action.addDir(new DirData(Global.LeftTopWard));
				if(RightTopCB.selected) action.addDir(new DirData(Global.RightTopWard));
				if(LeftBottomCB.selected) action.addDir(new DirData(Global.LeftBottomWard));
				if(RightBottomCB.selected) action.addDir(new DirData(Global.RightBottomWard));
			}
			
			protected function __initializedHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				
				var actions:Array = PackerWin.packerData.getActions();
				
				for each(var action:ActionData in actions)
				{
					setActionCBSelected(action);
					
					var dirs:Array = action.getDirs();
					
					for each(var dir:DirData in dirs)
					{
						setDirCBSelected(dir);
					}
				}
			}
			
			protected function setActionCBSelected(data:ActionData):void
			{
				if(data.id == Global.NormalMotion) NormalCB.selected = true;
				else if(data.id == Global.WalkMotion) WalkCB.selected = true;
				else if(data.id == Global.RunMotion) RunCB.selected = true;
				else if(data.id == Global.AttackMotion) AttackCB.selected = true;
				else if(data.id == Global.DefenseMotion) DefenseCB.selected = true;
				else if(data.id == Global.HurtMotion) HurtCB.selected = true;
				else if(data.id == Global.SkillMotion) SkillCB.selected = true;
				else if(data.id == Global.DieMotion) DieCB.selected = true;
			}
			
			protected function setDirCBSelected(dir:DirData):void
			{
				if(dir == null) return;
				
				if(dir.dir == Global.UpWard) UpCB.selected = true;
				else if(dir.dir == Global.DownWard) DownCB.selected = true;
				else if(dir.dir == Global.LeftWard) LeftCB.selected = true;
				else if(dir.dir == Global.RightWard) RightCB.selected = true;
				else if(dir.dir == Global.LeftTopWard) LeftTopCB.selected = true;
				else if(dir.dir == Global.RightTopWard) RightTopCB.selected = true;
				else if(dir.dir == Global.LeftBottomWard) LeftBottomCB.selected = true;
				else if(dir.dir == Global.RightBottomWard) RightBottomCB.selected = true;
			}
		]]>
	</fx:Script>
	<fx:Metadata>
		[Event(name="createAction", type="tool.pngpacker.events.PackerEvent")]
	</fx:Metadata>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:VGroup left="40" top="50" bottom="50" width="100" horizontalAlign="center"
			  verticalAlign="middle">
		<s:CheckBox id="NormalCB" label="{Global.ActionNames[Global.NormalMotion]}" />
		<s:CheckBox id="WalkCB" label="{Global.ActionNames[Global.WalkMotion]}" />
		<s:CheckBox id="RunCB" label="{Global.ActionNames[Global.RunMotion]}" />
		<s:CheckBox id="AttackCB" label="{Global.ActionNames[Global.AttackMotion]}" />
		<s:CheckBox id="DefenseCB" label="{Global.ActionNames[Global.DefenseMotion]}" />
		<s:CheckBox id="HurtCB" label="{Global.ActionNames[Global.HurtMotion]}" />
		<s:CheckBox id="SkillCB" label="{Global.ActionNames[Global.SkillMotion]}" />
		<s:CheckBox id="DieCB" label="{Global.ActionNames[Global.DieMotion]}" />
	</s:VGroup>
	<s:VGroup right="20" top="50" bottom="50" width="70" horizontalAlign="left"
			  verticalAlign="middle">
		<s:CheckBox id="UpCB" label="{Global.DirNames[Global.UpWard]}" />
		<s:CheckBox id="DownCB" label="{Global.DirNames[Global.DownWard]}" />
		<s:CheckBox id="LeftCB" label="{Global.DirNames[Global.LeftWard]}" />
		<s:CheckBox id="RightCB" label="{Global.DirNames[Global.RightWard]}" />
		<s:CheckBox id="LeftTopCB" label="{Global.DirNames[Global.LeftTopWard]}" />
		<s:CheckBox id="RightTopCB" label="{Global.DirNames[Global.RightTopWard]}" />
		<s:CheckBox id="LeftBottomCB" label="{Global.DirNames[Global.LeftBottomWard]}" />
		<s:CheckBox id="RightBottomCB" label="{Global.DirNames[Global.RightBottomWard]}" />
	</s:VGroup>
	<s:HGroup left="20" right="20" bottom="10" height="33" gap="10" horizontalAlign="center"
			  verticalAlign="middle">
		<s:Button label="确 定" click="button1_clickHandler(event)"/>
		<s:Button label="取消" click="button2_clickHandler(event)"/>
	</s:HGroup>
	<s:Label left="20" right="20" top="5" height="20" color="#F50000" text="每个动作都会创建所有选择的方向"
			 textAlign="center" verticalAlign="middle"/>
	<s:Label left="20" right="20" top="25" height="20" color="#F50000" text="去掉选择将清除相应数据"
			 textAlign="center" verticalAlign="middle"/>
</tool:BaseTitleWindow>
