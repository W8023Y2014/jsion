<?xml version="1.0" encoding="utf-8"?>
<tool:BaseTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
					  xmlns:s="library://ns.adobe.com/flex/spark"
					  xmlns:mx="library://ns.adobe.com/flex/mx"
					  xmlns:tool="tool.*"
					  width="200" height="86" title="格式化XML">

	<fx:Script>
		<![CDATA[
			import jsion.utils.DelayUtil;
			import jsion.utils.JUtil;
			import jsion.utils.StringUtil;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.DragManager;
			
			import tool.waiting.Waiting;
			
			import utils.FileMgr;
			
			protected var fileList:Array;
			
			protected var rltBytes:ByteArray;
			
			protected var defaultName:String;
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
				Waiting.show("选择并加载文件...");
				
				FileMgr.openMultiFiles(openCallback, cancelCallback);
			}
			
			protected function cancelCallback():void
			{
				// TODO Auto Generated method stub
				
				Waiting.hide();
			}
			
			protected function openCallback(files:Array, hasError:Boolean, errorList:Array):void
			{
				// TODO Auto Generated method stub
				
				fileList = files;
				
				tryFormat();
			}
			
			protected function tryFormat():void
			{
				if(fileList.length > 0) Waiting.show("格式化中...");
				
				DelayUtil.setDelayApply(tryFormatImp);
			}
			
			protected function tryFormatImp():void
			{
				var file:FileReference = null;
				
				while(fileList.length > 0 && (file == null || file.data == null))
				{
					file = fileList.shift() as FileReference;
				}
				
				if(file == null)
				{
					//TODO:完成
					Waiting.hide();
					return;
				}
				
				
				file.data.position = 0;
				
				var str:String = file.data.readUTFBytes(file.data.bytesAvailable);
				
				var xml:XML;
				
				try
				{
					xml = new XML(str)
				}
				catch(err:Error)
				{
					Alert.show("Xml格式错误无法格式化!\rFile:" + file.name, "Xml格式化");
					
					DelayUtil.setDelayApply(tryFormat);
					
					return;
				}
				
				var root:XmlNode = new XmlNode();
				
				var rlt:String = root.parseXML(xml);
				
				rltBytes = new ByteArray();
				
				rltBytes.writeUTFBytes(rlt);
				
				defaultName = file.name;
				
				DelayUtil.setDelayApply(saveBytes);
			}
			
			protected function saveBytes():void
			{
				Waiting.show("Xml格式化完成!正在保存...");
				
				FileMgr.save(rltBytes, defaultName, saveCompleteCallback, saveCancelCallback, saveErrorCallback);
			}
			
			protected function saveCompleteCallback(file:FileReference):void
			{
				Waiting.show("保存成功!");
				
				DelayUtil.setDelayApply(tryFormat);
			}
			
			protected function saveCancelCallback():void
			{
				// TODO Auto Generated method stub
				
				DelayUtil.setDelayApply(tryFormat);
			}
			
			protected function saveErrorCallback(file:FileReference, errorMsg:String):void
			{
				// TODO Auto Generated method stub
				
				DelayUtil.setDelayApply(tryFormat);
				
				Alert.show("保存失败!\r" + errorMsg, "Xml格式化");
			}
			
		]]>
	</fx:Script>

	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:Button left="10" right="10" top="10" bottom="10" label="选择Xml文件"
			  click="button1_clickHandler(event)"/>
</tool:BaseTitleWindow>
