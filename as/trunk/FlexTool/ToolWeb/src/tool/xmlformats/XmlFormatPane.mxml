<?xml version="1.0" encoding="utf-8"?>
<tool:BaseTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
					  xmlns:s="library://ns.adobe.com/flex/spark"
					  xmlns:mx="library://ns.adobe.com/flex/mx"
					  xmlns:tool="tool.*"
					  width="200" height="86" title="格式化XML">

	<fx:Script>
		<![CDATA[
			import jsion.utils.DelayUtil;
			import jsion.utils.JUtil;
			import jsion.utils.StringUtil;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.DragManager;
			
			import tool.waiting.Waiting;
			
			import utils.FileMgr;
			
			protected var fileList:Array;
			
			protected var rltBytes:ByteArray;
			
			protected var defaultName:String;
			
//			private var list:Array = [];
//			
//			protected function titlewindow1_nativeDragEnterHandler(event:NativeDragEvent):void
//			{
//				// TODO Auto-generated method stub
//				DragManager.showFeedback(DragManager.LINK);
//				DragManager.acceptDragDrop(this);
//			}
//
//			protected function titlewindow1_nativeDragDropHandler(event:NativeDragEvent):void
//			{
//				// TODO Auto-generated method stub
//				
//				//trace("取到拖入的文件");
//				
//				var files:Array = event.clipboard.getData(ClipboardFormats.FILE_LIST_FORMAT) as Array;
//				
//				for(var i:int = 0; i < files.length; i++)
//				{
//					list.push(files[i]);
//				}
//				
//				addEventListener(Event.ENTER_FRAME, __enterFrameHandler);
//			}
//			
//			protected function __enterFrameHandler(e:Event):void
//			{
//				if(list.length != 0)
//				{
//					ToolGlobal.windows.statusText.text = "正在格式化...";
//					
//					var file:File = list.pop() as File;
//					
//					var bytes:ByteArray = new ByteArray();
//					
//					var fs:FileStream = new FileStream();
//					
//					fs.open(file, FileMode.READ);
//					fs.readBytes(bytes);
//					fs.close();
//					
//					var xml:XML;
//					
//					try
//					{
//						xml = new XML(bytes);
//					}
//					catch(err:Error)
//					{
//						return;
//					}
//					
//					var back:String = JUtil.path2Key(file.name) + ".bak";
//					
//					var backFile:File = file.parent.resolvePath(back);
//					
//					FileMgr.copy2Target(file, backFile);
//					
//					var root:XmlNode = new XmlNode();
//					
//					var rlt:String = root.parseXML(xml);
//					
//					var bs:ByteArray = new ByteArray();
//					
//					bs.writeUTFBytes(rlt);
//					
//					var f:File = file.parent.resolvePath(file.name);
//					
//					fs.open(f, FileMode.WRITE);
//					fs.writeBytes(bs);
//					fs.close();
//				}
//				else
//				{
//					removeEventListener(Event.ENTER_FRAME, __enterFrameHandler);
//					Alert.show("格式化完成", "提示");
//					ToolGlobal.windows.statusText.text = "格式化完成，输出到文件所在目录！";
//				}
//			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
				Waiting.show("选择并加载文件...");
				
				FileMgr.openMultiFiles(openCallback, cancelCallback);
			}
			
			protected function cancelCallback():void
			{
				// TODO Auto Generated method stub
				
			}
			
			protected function openCallback(files:Array, hasError:Boolean, errorList:Array):void
			{
				// TODO Auto Generated method stub
				
				fileList = files;
				
				tryFormat();
			}
			
			protected function tryFormat():void
			{
				if(fileList.length > 0) Waiting.show("格式化中...");
				
				DelayUtil.setDelayApply(tryFormatImp);
			}
			
			protected function tryFormatImp():void
			{
				var file:FileReference = null;
				
				while(fileList.length > 0 && (file == null || file.data == null))
				{
					file = fileList.shift() as FileReference;
				}
				
				if(file == null)
				{
					//TODO:完成
					Waiting.hide();
					return;
				}
				
				
				file.data.position = 0;
				
				var str:String = file.data.readUTFBytes(file.data.bytesAvailable);
				
				var xml:XML;
				
				try
				{
					xml = new XML(str)
				}
				catch(err:Error)
				{
					Waiting.show("Xml格式错误无法格式化!");
					
					DelayUtil.setDelayApply(tryFormat, 30);
					
					return;
				}
				
				var root:XmlNode = new XmlNode();
				
				var rlt:String = root.parseXML(xml);
				
				rltBytes = new ByteArray();
				
				rltBytes.writeUTFBytes(rlt);
				
				defaultName = file.name;
				
				DelayUtil.setDelayApply(saveBytes);
			}
			
			protected function saveBytes():void
			{
				Waiting.show("Xml格式化完成!正在保存...");
				
				FileMgr.save(rltBytes, defaultName, saveCompleteCallback, saveCancelCallback, saveErrorCallback);
			}
			
			protected function saveCompleteCallback(file:FileReference):void
			{
				Waiting.show("保存成功!");
				
				DelayUtil.setDelayApply(tryFormat);
			}
			
			protected function saveCancelCallback(file:FileReference):void
			{
				// TODO Auto Generated method stub
				
				DelayUtil.setDelayApply(tryFormat);
			}
			
			protected function saveErrorCallback(file:FileReference, errorMsg:String):void
			{
				// TODO Auto Generated method stub
				
				DelayUtil.setDelayApply(tryFormat);
				
				Alert.show("保存失败!\r\n" + errorMsg, "Xml格式化");
			}
			
		]]>
	</fx:Script>

	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:Button left="10" right="10" top="10" bottom="10" label="选择Xml文件"
			  click="button1_clickHandler(event)"/>
</tool:BaseTitleWindow>
